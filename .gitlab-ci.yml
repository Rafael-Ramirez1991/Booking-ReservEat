stages:
  - build
  - deploy

build_react:
  stage: build
  image: node:latest
  script:
    - cd cliente-react
    - npm ci
    - npm run build
  artifacts:
    paths:
      - cliente-react/dist/
  rules:
    - changes:
        - cliente-react/**/*

build_java:
  stage: build
  image: maven:latest
  script:
    - echo 'ruta en la que me encuentro actualmente'
    - pwd
    - ls
    - cd backEnd/dev-api/Booking-Restaurantes/
    - pwd
    - ls
    - mvn clean package
  artifacts:
    paths:
      - backEnd/dev-api/Booking-Restaurantes/target
  rules:
    - changes:
        - backEnd/**/*

deploy_react:
  stage: deploy
  image: python:latest
  script:
    - pwd
    - ls cliente-react
    - pip install awscli
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws s3 sync cliente-react/dist/ s3://reserveat-client
  rules:
    - changes:
        - cliente-react/**/*

deploy_java:
  stage: deploy
  image: ubuntu:latest
  before_script:
    - apt-get update && apt-get install -y openssh-client
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - eval $(ssh-agent -s)
    - echo "$RESERVEAT_KEY" | tr -d '\r' | ssh-add -
    - touch ~/.ssh/config
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - ssh-keyscan -H "$EC2_JUMP_SERVER" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - pwd
    - ls
    - echo "Inicio de deploy"
    - ssh ec2-user@$EC2_JUMP_SERVER "sudo systemctl stop my-application.service"
    - scp ./backEnd/dev-api/Booking-Restaurantes/target/Booking-Restaurantes-0.0.1-SNAPSHOT.jar ec2-user@ec2-18-222-87-247.us-east-2.compute.amazonaws.com:/home/ec2-user
    - ssh ec2-user@$EC2_JUMP_SERVER "sudo systemctl start my-application.service"
    - echo "Fin de deploy"
  rules:
    - changes:
        - backEnd/**/*